<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hh.board.domain.comment.CommentMapper">

    <!--    comment 테이블 전체 컬럼   -->
    <sql id="commentColumns">
        comment_id
        , post_id
        , content
        , create_date
        , status
    </sql>

    <!--    댓글 추가  -->
    <insert id="saveComment" parameterType="com.hh.board.domain.comment.CommentVo" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO comment(
            <include refid="commentColumns"></include>
        )
        VALUES (
              #{commentId}
            , #{postId}
            , #{content}
            , NOW()
        )
    </insert>

    <!--    id에 해당하는 댓글 찾기   -->
    <select id="findCommentById" parameterType="int" resultType="com.hh.board.domain.comment.CommentVo">
        SELECT
            <include refid="commentColumns"></include>
        FROM
            comment
        WHERE
            comment_id = #{commentId}
            AND status = 1
    </select>

    <!--    postId에 해당하는 댓글 리스트로 불러오기  -->
    <select id="findAllCommentByPostId" parameterType="int" resultType="com.hh.board.domain.comment.CommentVo">
        SELECT
            <include refid="commentColumns"></include>
        FROM
            comment
        WHERE
            post_id = #{postId}
            AND status = 1
        ORDER BY
            comment_id ASC
    </select>


    <!--    댓글 수정   -->
    <update id="updateComment" parameterType="com.hh.board.domain.comment.CommentVo">
        UPDATE
            comment
        SET
            content = #{content}
        WHERE
            comment_id = #{commentId}
    </update>

    <!--    댓글 삭제   -->
    <update id="deleteCommentById" parameterType="int">
        UPDATE
            comment
        SET
            status = 0
        WHERE
            comment_id = #{commentId}
    </update>
</mapper>