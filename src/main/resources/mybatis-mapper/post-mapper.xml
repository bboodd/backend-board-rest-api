<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hh.board.domain.post.PostMapper">

<!--    post 테이블 전체 컬럼   -->
    <sql id="postColumns">
          post_id
        , category_id
        , writer
        , password
        , title
        , content
        , view_count
        , create_date
        , update_date
        , status
    </sql>

<!--    검색 조건   -->
    <sql id="search">
        <where>
            <if test="startDate != null and startDate != ''">
                AND create_date >= #{startDate}
            </if>

            <if test="endDate != null and endDate != ''">
                AND #{endDate} >= create_date
            </if>

            <if test="categoryId != null and categoryId != ''">
                AND category_id = #{categoryId}
            </if>
            <if test="keyword != null and keyword != ''">
                AND CONCAT(title, writer, content) LIKE CONCAT('%', #{keyword}, '%')
            </if>
            AND status = 1
        </where>
    </sql>

    <!--    게시글 등록-->
    <insert id="savePost" parameterType="com.hh.board.domain.post.PostVo" useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO post (
            <include refid="postColumns" />
        ) VALUES (
              #{postId}
            , #{categoryId}
            , #{writer}
            , #{password}
            , #{title}
            , #{content}
            , 0
            , NOW()
            , NOW()
            , 1
        )
    </insert>

    <!--    게시글 리스트 가져오기-->
    <select id="findAllPostBySearch" parameterType="com.hh.board.common.vo.SearchVo" resultType="com.hh.board.domain.post.PostVo">
        SELECT
            <include refid="postColumns"></include>
          , (SELECT category_name FROM category category WHERE category.category_id = post.category_id) AS categoryName
          , NULLIF((SELECT COUNT(*) FROM file file WHERE file.post_id = post.post_id), 0) AS fileCount
        FROM
            post
        <include refid="search"></include>
        ORDER BY
            post_id DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

<!--    게시글 수 카운팅   -->
    <select id="count" parameterType="com.hh.board.common.vo.SearchVo" resultType="int">
        SELECT
            COUNT(*)
        FROM
            post
        <include refid="search"></include>
    </select>

<!--    게시글 비밀번호 가져오기   -->
    <select id="findPostPasswordById" parameterType="int" resultType="java.lang.String">
        SELECT
            password
        FROM
            post
        WHERE
            post_id = #{postId}
    </select>

    <!--    선택 게시글 가져오기  -->
    <select id="findPostById" parameterType="int" resultType="com.hh.board.domain.post.PostVo">
        SELECT
            <include refid="postColumns"></include>
          , (SELECT category_name FROM category WHERE category.category_id = post.category_id) AS categoryName
        FROM
            post
        WHERE
            post_id = #{postId}
    </select>

    <!--    선택 게시글 조회수 증가  -->
    <update id="increaseViewCountById" parameterType="int">
        UPDATE
            post
        SET
            view_count = view_count + 1
        WHERE
            post_id = #{postId}
    </update>

    <!--    게시글 삭제 구현 ( state를 0으로 만든다 )   -->
    <update id="deletePostById" parameterType="int">
        UPDATE
            post
        SET
            status = 0
        WHERE
            post_id = #{postId}
    </update>

<!--    게시글 업데이트  -->
    <update id="updatePost" parameterType="com.hh.board.domain.post.PostVo">
        UPDATE post
        SET
              category_id = #{categoryId}
            , writer = #{writer}
            , title = #{title}
            , content = #{content}
            , update_date = NOW()
        WHERE
            post_id = #{postId}
    </update>

</mapper>
